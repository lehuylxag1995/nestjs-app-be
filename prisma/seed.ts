import { PrismaClient } from '@prisma/client';

import { createCategories } from './seeds/categories.seed';
import { createInventoryByProductAndVariants } from './seeds/inventories.seed';
import {
  createInventoryTransactionByOrder,
  createInventoryTransactionsByPurcharsOrder,
} from './seeds/inventory_transactions.seed';
import { createOrder } from './seeds/order.seed';
import { createPricingRule } from './seeds/pricing_rule.seed';
import { createProductImageForProducts } from './seeds/product_images.seed';
import { createProductVariantForProducts } from './seeds/product_vartiants.seed';
import { createProductForLeafCategories } from './seeds/products.seed';
import { createPurcharOrder } from './seeds/purchars_order.seed';
import { createRoleAndPermission } from './seeds/role.seed';
import { createSupplier } from './seeds/suppliers.seed';

const prisma = new PrismaClient();

async function runThongTinCoBan() {
  //Lu·ªìng th√¥ng tin c∆° b·∫£n
  await createRoleAndPermission();
  console.log('‚úÖ Seed User');
  await createSupplier(20);
  console.log('‚úÖ Seed Supplier');
  await createCategories(3, 3); //c√¢y t·ªëi ƒëa 3 t·∫ßng, m·ªói node c√≥ t·ªëi ƒëa 3 con
  console.log('‚úÖ Seed Categories');
  await createProductForLeafCategories(3, 10);
  console.log('‚úÖ Seed Products');
  await createProductVariantForProducts(1, 4);
  console.log('‚úÖ Seed Products Variants');
  await createProductImageForProducts(3, 5);
  console.log('‚úÖ Seed Products Image');
  await createPricingRule(20);
  console.log('‚úÖ Seed Pricing Rule');
  await createInventoryByProductAndVariants();
  console.log('‚úÖ Seed Inventory');
}

async function luongNhapHang() {
  await createPurcharOrder();
  console.log('‚úÖ Seed Purchars Order');
}

async function luongImportKho() {
  //Lu·ªìng qu·∫£n l√Ω kho -> ƒë·ªÉ t·∫°o gi√° ni√™m y·∫øt
  await createInventoryTransactionsByPurcharsOrder();
  console.log('‚úÖ Seed Inventory Transaction + Invetory (Import)');
}

async function luongBanHang() {
  await createOrder();
  console.log('‚úÖ Seed Order');
}

async function luongExportKho() {
  await createInventoryTransactionByOrder();
  console.log('‚úÖ Seed Inventory Transaction + Invetory (Export)');
}

async function main() {
  console.log('üöÄ Start seeding...');
  await runThongTinCoBan();

  await luongNhapHang();
  await luongImportKho();

  await luongBanHang();
  await luongExportKho();
}

main()
  .then(async () => {
    await prisma.$disconnect();
  })
  .catch(async (e) => {
    console.error('‚ùå Seed l·ªói:', e);
    await prisma.$disconnect();
    process.exit(1);
  });
